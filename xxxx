double exposure_number = ring_exposure_numbers[j] - 1;

    // Wywołanie mean_spread_function z parametrami mu_spread_parameters
    conditional_mean[j] = mean_spread_function(j, exposure_number, mu_spread_parameters);

    // Wywołanie var_spread_function z parametrami mu_spread_parameters i sigma_spread_parameters
    conditional_var[j] = var_spread_function(j, exposure_number, mu_spread_parameters, sigma_spread_parameters);

    // Kalkulacja alpha i beta
    alpha[j] = conditional_mean[j] * (exposure_number - conditional_mean[j] - conditional_var[j] / conditional_mean[j]) /
               (conditional_mean[j] + exposure_number * (conditional_var[j] / conditional_mean[j] - 1));

    beta[j] = (exposure_number - conditional_mean[j]) * (exposure_number - conditional_mean[j] - conditional_var[j] / conditional_mean[j]) /
              (conditional_mean[j] + exposure_number * (conditional_var[j] / conditional_mean[j] - 1));

    // Losowanie z rozkładu beta
    simulated_probability[j] = randBeta(alpha[j], beta[j]);

    // Losowanie liczby rozprzestrzenionych ognisk za pomocą rozkładu Bernoulli
    number_of_fire_spreads[j] = 1 + randBin(static_cast<int>(exposure_number), simulated_probability[j]);
