library(sf)
library(dbscan)
library(dplyr)
# Wymagane pakiety
library(sf)
library(dbscan)
library(dplyr)

znajdz_koncentacje_pozarow <- function(df, top_n = 4, R = 300, nazwa_kolumny = "value") {
  
  # Rozpoczęcie pomiaru czasu
  start_time <- Sys.time()
  
  cat("Przygotowuję dane...\n")
  
  # 1. Konwersja do obiektu sf w układzie WGS84
  sf_punkty <- st_as_sf(df, coords = c("lon", "lat"), crs = 4326)
  
  # 2. Transformacja do układu metrycznego EPSG:2180
  sf_punkty_m <- st_transform(sf_punkty, 2180)
  wsp_xy <- st_coordinates(sf_punkty_m)  # Ekstrakcja współrzędnych
  
  cat(" --> Dane zostały przekształcone do układu EPSG:2180.\n")
  
  cat("Grupuję dane w okręgach (drzewo KD-Tree)...\n")
  
  # 3. Znalezienie sąsiadów w promieniu R
  sasiedzi <- frNN(wsp_xy, eps = R, sort = FALSE)
  
  cat(" -- > Sąsiedzi zostali znalezieni.\n")
  
  cat("Wyznaczam największą koncentrację...\n")
  
  # 4. Obliczenie sumy wartości dla każdego punktu i jego sąsiadów
  n <- nrow(df)
  sumy <- numeric(n)
  lista_sasiadow <- vector("list", n)
  
  for (i in seq_len(n)) {
    indeksy <- sasiedzi$id[[i]]
    if (!i %in% indeksy) indeksy <- c(indeksy, i)
    indeksy <- unique(indeksy)
    
    lista_sasiadow[[i]] <- indeksy
    sumy[i] <- sum(df[[nazwa_kolumny]][indeksy])
  }
  
  df$sum_sasiedztwa <- sumy
  
  # 5. Tworzenie pomocniczej ramki z unikalnymi zbiorami sąsiadów
  sasiedzi_str <- sapply(seq_len(n), function(i) {
    paste0(sort(lista_sasiadow[[i]]), collapse = ",")
  })
  
  sasiedzi_df <- data.frame(
    indeks = seq_len(n),
    suma = sumy,
    sasiedzi_str = sasiedzi_str,
    stringsAsFactors = FALSE
  )
  
  # 6. Sortowanie po sumie wartości
  sasiedzi_df <- sasiedzi_df[order(sasiedzi_df$suma, decreasing = TRUE), ]
  
  # 7. Usunięcie duplikatów zbiorów sąsiadów
  sasiedzi_df_unikalne <- distinct(sasiedzi_df, sasiedzi_str, .keep_all = TRUE)
  
  # 8. Wybór top_n największych unikalnych grup
  top_n <- min(top_n, nrow(sasiedzi_df_unikalne))
  wybrane_grupy <- sasiedzi_df_unikalne[1:top_n, ]
  
  cat(" --> Wyznaczono", top_n, "największych skupisk.\n")
  
  # 9. Tworzenie listy skupisk
  lista_okręgów <- vector("list", top_n)
  
  for (k in seq_len(top_n)) {
    i <- wybrane_grupy$indeks[k]
    indeksy_i <- lista_sasiadow[[i]]
    
    srodek_xy <- wsp_xy[i, ]
    odleglosci <- sapply(indeksy_i, function(j) {
      sqrt((wsp_xy[j,1] - srodek_xy[1])^2 + (wsp_xy[j,2] - srodek_xy[2])^2)
    })
    
    df_grupa <- df[indeksy_i, , drop = FALSE]
    df_grupa$ranking <- k
    df_grupa$suma_grupy <- sumy[i]
    df_grupa$odleglosc <- odleglosci
    
    lista_okręgów[[k]] <- df_grupa
  }
  
  cat("Proces przebiegł pomyślnie! ✅\n")
  
  # Pomiar końcowego czasu wykonania
  end_time <- Sys.time()
  total_time <- round(difftime(end_time, start_time, units = "secs"), 2)
  
  cat("\n Całkowity czas wykonania:", total_time, "sekund.\n")
  
  return(lista_okręgów)
}

df <- data.frame(
  lon = c(21.02111, 21.02121, 21.05111, 21.05111, 21.05112, 21.03, 21.10, 21.10, 21.10, 21.20),
  lat = c(52.1354, 52.1372, 52.1111, 52.1111, 52.11, 52.20, 52.15, 52.15, 52.15, 52.30),
  wartosc = c(100, 8, 2000, 5, 15, 40, 300, 50, 25, 60),
  wartosc2 = c(100, 8, 2000, 5, 15, 40, 300, 50, 25, 60),
  wartosc3 = c("100", 8, 2000, 5, 15, 40, 300, 50, 25, 60)
  
)

wynik <- znajdz_koncentacje_pozarow(df, top_n = 4, R = 300, nazwa_kolumny = "wartosc")

# Sprawdzenie pierwszej grupy
wynik[[1]]
wynik[[2]]
