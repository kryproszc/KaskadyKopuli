# 1. Analiza Skewness (asymetria rozkładu)
library(e1071)  # Upewnij się, że masz zainstalowany pakiet e1071

# Obliczanie skewness (asymetrii) dla danych
skew_value <- skewness(simulations_data)
cat("Skewness (Asymetria rozkładu):", skew_value, "\n")

# Interpretacja skewness
if (skew_value > 0) {
  cat("Rozkład jest prawoskrętny (skewness > 0)\n")
} else if (skew_value < 0) {
  cat("Rozkład jest lewoskrętny (skewness < 0)\n")
} else {
  cat("Rozkład jest symetryczny (skewness = 0)\n")
}

# 2. Analiza kroków przyrostowych: Stabilność średniej i kwantyla 0.995
compute_stability_incremental <- function(data, steps, quantile_level = 0.995) {
  mean_values <- sapply(1:steps, function(x) mean(data[1:x]))
  quantile_values <- sapply(1:steps, function(x) quantile(data[1:x], quantile_level))
  
  # Zwróć średnią i kwantyl dla każdego kroku
  return(list(mean_values = mean_values, quantile_values = quantile_values))
}

# Parametry
steps <- length(simulations_data)  # Liczba prób (np. 20 000)

# Obliczenia kroków przyrostowych dla średniej i kwantyla 0.995
stability_incremental <- compute_stability_incremental(simulations_data, steps)

# Rysowanie wykresów
par(mfrow = c(1, 2))  # Dwa wykresy obok siebie

# Wykres: Stabilność średniej
plot(1:steps, stability_incremental$mean_values, type = "l", col = "blue", 
     xlab = "Liczba symulacji", ylab = "Średnia", main = "Stabilność średniej")

# Wykres: Stabilność kwantyla 0.995
plot(1:steps, stability_incremental$quantile_values, type = "l", col = "red", 
     xlab = "Liczba symulacji", ylab = "Kwantyl 0.995", main = "Stabilność kwantyla 0.995")
