# Załaduj wymagane pakiety
library(readxl)  # Do obsługi plików XLSX
library(dplyr)   # Do operacji na danych

# Ścieżka do folderu z częściami plików
sciezka_do_folderu <- "sciezka_do_folderu"

# Znajdź wszystkie części plików ZIP
plik_lista <- list.files(path = sciezka_do_folderu, pattern = "*.zip.*", full.names = TRUE)

# Sprawdź, czy znaleziono pliki
if (length(plik_lista) == 0) {
  stop("Nie znaleziono plików ZIP.")
}

# Ostateczny wynikowy plik ZIP po połączeniu
output_file <- file.path(sciezka_do_folderu, "połączony_plik.zip")

# Tworzymy pusty plik ZIP wynikowy
file.create(output_file)

# Łączymy wszystkie części w jeden plik ZIP
for (file_part in plik_lista) {
  file.append(output_file, file_part)
}

# Ścieżka do folderu, gdzie wypakujemy pliki
sciezka_do_wypakowania <- file.path(sciezka_do_folderu, "wypakowane_pliki")

# Tworzymy folder na wypakowane pliki
dir.create(sciezka_do_wypakowania, showWarnings = FALSE)

# Rozpakowanie połączonego pliku ZIP
unzip(output_file, exdir = sciezka_do_wypakowania)

# Sprawdź, co zostało wypakowane
wypakowane_pliki <- list.files(sciezka_do_wypakowania, full.names = TRUE)

# Próbujemy znaleźć i wczytać plik CSV lub XLSX
csv_file <- grep("\\.csv$", wypakowane_pliki, value = TRUE)
xlsx_file <- grep("\\.xlsx$", wypakowane_pliki, value = TRUE)

if (length(csv_file) > 0) {
  # Jeśli znaleziono plik CSV, wczytaj go
  dane <- read.csv(csv_file[1])
  print("Wczytano plik CSV:")
  print(head(dane))  # Wyświetl początek danych
} else if (length(xlsx_file) > 0) {
  # Jeśli znaleziono plik XLSX, wczytaj go
  dane <- read_excel(xlsx_file[1])
  print("Wczytano plik XLSX:")
  print(head(dane))  # Wyświetl początek danych
} else {
  print("Nie znaleziono plików CSV ani XLSX.")
}
# Załaduj wymagane pakiety
library(readxl)  # Do obsługi plików XLSX
library(dplyr)   # Do operacji na danych

# Ścieżka do folderu z częściami plików
sciezka_do_folderu <- "sciezka_do_folderu"

# Znajdź wszystkie części plików ZIP
plik_lista <- list.files(path = sciezka_do_folderu, pattern = "*.zip.*", full.names = TRUE)

# Sprawdź, czy znaleziono pliki
if (length(plik_lista) == 0) {
  stop("Nie znaleziono plików ZIP.")
}

# Ostateczny wynikowy plik ZIP po połączeniu
output_file <- file.path(sciezka_do_folderu, "połączony_plik.zip")

# Tworzymy pusty plik ZIP wynikowy
file.create(output_file)

# Łączymy wszystkie części w jeden plik ZIP
for (file_part in plik_lista) {
  file.append(output_file, file_part)
}

# Ścieżka do folderu, gdzie wypakujemy pliki
sciezka_do_wypakowania <- file.path(sciezka_do_folderu, "wypakowane_pliki")

# Tworzymy folder na wypakowane pliki
dir.create(sciezka_do_wypakowania, showWarnings = FALSE)

# Rozpakowanie połączonego pliku ZIP
unzip(output_file, exdir = sciezka_do_wypakowania)

# Sprawdź, co zostało wypakowane
wypakowane_pliki <- list.files(sciezka_do_wypakowania, full.names = TRUE)

# Próbujemy znaleźć i wczytać plik CSV lub XLSX
csv_file <- grep("\\.csv$", wypakowane_pliki, value = TRUE)
xlsx_file <- grep("\\.xlsx$", wypakowane_pliki, value = TRUE)

if (length(csv_file) > 0) {
  # Jeśli znaleziono plik CSV, wczytaj go
  dane <- read.csv(csv_file[1])
  print("Wczytano plik CSV:")
  print(head(dane))  # Wyświetl początek danych
} else if (length(xlsx_file) > 0) {
  # Jeśli znaleziono plik XLSX, wczytaj go
  dane <- read_excel(xlsx_file[1])
  print("Wczytano plik XLSX:")
  print(head(dane))  # Wyświetl początek danych
} else {
  print("Nie znaleziono plików CSV ani XLSX.")
}
